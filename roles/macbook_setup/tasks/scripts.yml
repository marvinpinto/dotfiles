---
- name: 'Put the screenshot script file in place'
  sudo: yes
  copy:
    src: 'screenshot.sh'
    dest: '/usr/local/bin/screenshot'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Put the diff-highlight script file in place'
  sudo: yes
  copy:
    src: 'diff-highlight'
    dest: '/usr/local/bin/diff-highlight'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Put the acd-backup script file in place'
  become: true
  template:
    src: 'acd-backup.sh.j2'
    dest: '/usr/local/bin/acd-backup'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Put the bootstrap-projects script file in place'
  become: true
  template:
    src: 'bootstrap-projects.py.j2'
    dest: '/usr/local/bin/bootstrap-projects'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Put the rofi-calc script file in place'
  become: true
  copy:
    content: |
      #!/usr/bin/env bash
      if [[ -n $* ]]; then
        echo "Query: ${1}"
        qalc -t $1 | tee >(xclip -selection clipboard >/dev/null)
      fi
    dest: '/usr/local/bin/rofi-calc'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Put the rofi-switch-workspaces script file in place'
  become: true
  copy:
    content: |
      #!/usr/bin/env bash
      if [ -z $@ ]; then
        function gen_workspaces()
        {
          i3-msg -t get_workspaces | jq ".[] | (.name)" | sort -n
        }

        echo temporary; gen_workspaces
      else
          WORKSPACE=$@

          if [ x"temporary" = x"${WORKSPACE}" ]; then
            i3-msg workspace scratch >/dev/null
          elif [ -n "${WORKSPACE}" ]; then
            i3-msg workspace "${WORKSPACE}" >/dev/null
          fi
      fi
    dest: '/usr/local/bin/rofi-switch-workspaces'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Put the rofi-2fa script file in place'
  become: true
  copy:
    content: |
      #!/usr/bin/env bash
      pkill -9 scdaemon || true
      if [ -z $@ ]; then
        function list_credentials()
        {
          ykman oath &> /dev/null
          ykman oath list 2> /dev/null
        }

        echo none; list_credentials
      else
          CREDENTIAL=$@

          if [ x"none" = x"${CREDENTIAL}" ]; then
            # Clear the clipboard
            coproc (xclip -i /dev/null -selection "clipboard")
          elif [ -n "${CREDENTIAL}" ]; then
            ykman oath &> /dev/null
            coproc (ykman oath code -s "${CREDENTIAL}" | xclip -selection "clipboard")
          fi
      fi
    dest: '/usr/local/bin/rofi-2fa'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: 'Put the custom-pinentry script file in place'
  become: true
  copy:
    content: |
      #!/bin/bash
      # choose pinentry depending on PINENTRY_USER_DATA
      # requires pinentry-curses and pinentry-gtk2
      # this *only works* with gpg 2
      # see https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=802020
      case $PINENTRY_USER_DATA in
      gui)
        exec /usr/bin/pinentry "$@"
        ;;
      none)
        exit 1 # do not ask for passphrase
        ;;
      *)
        exec /usr/bin/pinentry-curses "$@"
      esac
    dest: '/usr/local/bin/custom-pinentry'
    owner: 'root'
    group: 'root'
    mode: '0755'
