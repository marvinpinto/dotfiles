set nocompatible              " be iMproved, required
filetype off

" Show the (partial) command as it's being typed
set showcmd

" Show current mode down the bottom
set showmode

" Enable line numbers
set number

" Convert tabs to spaces
set expandtab

" Make tabs as wide as two spaces
set tabstop=2
set shiftwidth=2

" Auto indenting
set cindent
set smartindent
set autoindent

" Disable autofolding
set nofoldenable

" Show 'invisible' characters
set listchars=tab:>-,trail:~,extends:>,precedes:<,nbsp:.
set list

" Disable error bells
set noerrorbells

" Use the OS clipboard by default (on versions compiled with `+clipboard`)
set clipboard=unnamedplus

" Do not attempt to rename the window
set notitle

"""" Start of Vundle related items

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

Plugin 'gmarik/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'rodjek/vim-puppet'
Plugin 'tomtom/tcomment_vim'
Plugin 'docker/docker' , {'rtp': '/contrib/syntax/vim/'}
Plugin 'ledger/vim-ledger'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'mustache/vim-mustache-handlebars'
Plugin 'leafgarland/typescript-vim'
Plugin 'jacoborus/tender.vim'
Plugin 'godlygeek/tabular'
Plugin 'plasticboy/vim-markdown'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
syntax on
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"""" End of Vundle related items

" Default status line
hi statusline ctermfg=15 ctermbg=102

" Format status line
set laststatus=2         " always show the status line
set statusline=\ [%n]    " buffer number
" set statusline+=\ %f     " relative path to the current file
set statusline+=\ %t     " tail of the file name
set statusline+=\ [%{strlen(&fenc)?&fenc:'none'},  " file encoding
set statusline+=%{&ff}]  " file format
set statusline+=\ %h     " help file flag
set statusline+=%m       " modified flag
set statusline+=%r       " read only flag
set statusline+=[%{empty(&filetype)?'none':&filetype}] " filetype or 'none'
set statusline+=%=       " left/right separator
set statusline+=(%l,     " row
set statusline+=%c\ %L)  " cursor column
set statusline+=\ %P     " percent through file

" Searching
set incsearch   " incremental search
set hlsearch    " highlight search items
set ignorecase  " case-insensitive searches
set smartcase   " ignore case if search pattern is all lowercase,
                " case-sensitive otherwise

" Clear the search highlights
nnoremap <F3> :set hlsearch!<CR>

" Refresh all buffers with F5
nnoremap <F5> :silent windo e!<CR>

" Remove access to the arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" Respect modeline in files
set modeline
set modelines=1

" Map the <leader> key to ,
let mapleader = ","

" Re-hardwrap paragraphs of text
nnoremap <leader>q gqip

" Trick to replace multiple lines with the content of the default clipboard
xnoremap p pgvy

" Map the tab creation/traversal sequence to Ctrl+w
nnoremap <C-w><Left> :tabprev<CR>
nnoremap <C-w><Right> :tabnext<CR>
nnoremap <C-w>n :tabnew<CR>

" Disable backup and swap files
set nobackup
set noswapfile

" Enable hidden buffers by default (doesn't bother you
" when switching back and forth)
set hidden

" Enhance command-line completion
set wildmenu

" Optimize for fast terminal connections
set ttyfast

" Don't reset cursor to start of line when moving around.
set nostartofline

" Show the cursor position
set ruler

" Don't show the intro message when starting Vim
set shortmess=atI

" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Set some filetypes depending on the file extension
autocmd BufNewFile,BufRead *.pp set filetype=puppet
autocmd BufNewFile,BufRead *.md set filetype=markdown
autocmd BufNewFile,BufRead *.ledger set filetype=ledger
autocmd BufNewFile,BufRead Dockerfile* set filetype=dockerfile
autocmd BufNewFile,BufRead *.{tf,go} set filetype=go
autocmd BufNewFile,BufRead *.{handlebars,hb,hbs,hbt} set filetype=html.handlebars
autocmd BufNewFile,BufRead *.{ts,tsx} set filetype=typescript

" Do not display the tab character in the following kind of files
autocmd filetype make set listchars=tab:\ \ ,trail:~,extends:>,precedes:<,nbsp:.
autocmd filetype gitcommit set listchars=tab:\ \ ,trail:~,extends:>,precedes:<,nbsp:.
autocmd filetype python set listchars=tab:\ \ ,trail:~,extends:>,precedes:<,nbsp:.
autocmd filetype java set listchars=tab:\ \ ,trail:~,extends:>,precedes:<,nbsp:.
autocmd filetype go set listchars=tab:\ \ ,trail:~,extends:>,precedes:<,nbsp:.

" Do not use tabs when in python mode
autocmd filetype python set expandtab

" Use hashes (#) for comments in .env files
try
  call tcomment#type#Define('dosini', '# %s')
catch
  " Plugin not yet loaded, will probably work on next invocation
endtry

" Disable vim recording
map q <Nop>

" Configure the colorscheme
if (has("termguicolors"))
 set termguicolors
endif
silent! colorscheme tender
highlight Comment cterm=italic " Italic comments.
highlight Comment gui=italic " Italic comments in gui.
highlight Todo cterm=italic " Italic comments.
highlight Todo gui=italic " Italic comments in gui.

" Extra markdown configuration
set conceallevel=2
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_conceal_code_blocks = 0
let g:vim_markdown_fenced_languages = ['c++=cpp', 'viml=vim', 'bash=sh', 'ini=dosini']
let g:vim_markdown_frontmatter = 1
autocmd FileType markdown highlight mkdLink guifg=#c9d05c ctermfg=185 guibg=NONE ctermbg=NONE gui=underline cterm=underline
